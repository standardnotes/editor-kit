!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("filesafe-js")):"function"==typeof define&&define.amd?define("EditorKit",["filesafe-js"],t):"object"==typeof exports?exports.EditorKit=t(require("filesafe-js")):e.EditorKit=t(e["filesafe-js"])}(self,(function(__WEBPACK_EXTERNAL_MODULE_filesafe_js__){return(()=>{var __webpack_modules__={"../component-relay/dist/dist.js":module=>{eval('!function(e,t){ true?module.exports=t():0}(self,(function(){return(()=>{"use strict";var e={d:(t,s)=>{for(var n in s)e.o(s,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:s[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};let s,n,i,o;var a;e.d(t,{default:()=>w}),function(e){e.SetSize="set-size",e.StreamItems="stream-items",e.StreamContextItem="stream-context-item",e.SaveItems="save-items",e.SelectItem="select-item",e.AssociateItem="associate-item",e.DeassociateItem="deassociate-item",e.ClearSelection="clear-selection",e.CreateItem="create-item",e.CreateItems="create-items",e.DeleteItems="delete-items",e.SetComponentData="set-component-data",e.InstallLocalComponent="install-local-component",e.ToggleActivateComponent="toggle-activate-component",e.RequestPermissions="request-permissions",e.PresentConflictResolution="present-conflict-resolution",e.DuplicateItem="duplicate-item",e.ComponentRegistered="component-registered",e.ActivateThemes="themes",e.Reply="reply",e.SaveSuccess="save-success",e.SaveError="save-error",e.ThemesActivated="themes-activated",e.KeyDown="key-down",e.KeyUp="key-up",e.Click="click"}(s||(s={})),function(e){e[e.Web=1]="Web",e[e.Desktop=2]="Desktop",e[e.Mobile=3]="Mobile"}(n||(n={})),function(e){e.Any="*",e.Item="SF|Item",e.RootKey="SN|RootKey|NoSync",e.ItemsKey="SN|ItemsKey",e.EncryptedStorage="SN|EncryptedStorage",e.Note="Note",e.Tag="Tag",e.SmartTag="SN|SmartTag",e.Component="SN|Component",e.Editor="SN|Editor",e.ActionsExtension="Extension",e.UserPrefs="SN|UserPreferences",e.HistorySession="SN|HistorySession",e.Theme="SN|Theme",e.Mfa="SF|MFA",e.ServerExtension="SF|Extension",e.FilesafeCredentials="SN|FileSafe|Credentials",e.FilesafeFileMetadata="SN|FileSafe|FileMetadata",e.FilesafeIntegration="SN|FileSafe|Integration",e.ExtensionRepo="SN|ExtensionRepo"}(i||(i={})),function(e){e.Pinned="pinned",e.Archived="archived",e.Locked="locked",e.UserModifiedDate="client_updated_at",e.DefaultEditor="defaultEditor",e.MobileRules="mobileRules",e.NotAvailableOnMobile="notAvailableOnMobile",e.MobileActive="mobileActive",e.LastSize="lastSize",e.PrefersPlainEditor="prefersPlainEditor",e.ComponentInstallError="installError"}(o||(o={}));var r=new Uint8Array(16);function c(){if(!a&&!(a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(r)}const m=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,l=function(e){return"string"==typeof e&&m.test(e)};for(var d=[],h=0;h<256;++h)d.push((h+256).toString(16).substr(1));const p=function(e,t,s){var n=(e=e||{}).random||(e.rng||c)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){s=s||0;for(var i=0;i<16;++i)t[s+i]=n[i];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=(d[e[t+0]]+d[e[t+1]]+d[e[t+2]]+d[e[t+3]]+"-"+d[e[t+4]]+d[e[t+5]]+"-"+d[e[t+6]]+d[e[t+7]]+"-"+d[e[t+8]]+d[e[t+9]]+"-"+d[e[t+10]]+d[e[t+11]]+d[e[t+12]]+d[e[t+13]]+d[e[t+14]]+d[e[t+15]]).toLowerCase();if(!l(s))throw TypeError("Stringified UUID is invalid");return s}(n)},v=e=>{var t;const s={[n.Web]:"web",[n.Desktop]:"desktop",[n.Mobile]:"mobile"};return null!==(t=s[e])&&void 0!==t?t:s[n.Web]},u=e=>null!=e,g=()=>{};class f{static get isSupported(){return!(!window.console&&!console)}static get info(){return f.isSupported&&this.enabled?console.log.bind(console):g}static get error(){return f.isSupported?console.error.bind(console):g}}var y,S,b,I;function k(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function E(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?k(Object(s),!0).forEach((function(t){C(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):k(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function C(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}(S="enabled")in(y=f)?Object.defineProperty(y,S,{value:false,enumerable:!0,configurable:!0,writable:!0}):y[S]=false,function(e){e.Component="component"}(b||(b={})),function(e){e.Shift="Shift",e.Ctrl="Control",e.Meta="Meta"}(I||(I={}));class w{constructor(e){if(C(this,"contentWindow",void 0),C(this,"initialPermissions",void 0),C(this,"onReadyCallback",void 0),C(this,"component",{activeThemes:[],acceptsThemes:!0}),C(this,"sentMessages",[]),C(this,"messageQueue",[]),C(this,"lastStreamedItem",void 0),C(this,"pendingSaveItems",void 0),C(this,"pendingSaveTimeout",void 0),C(this,"pendingSaveParams",void 0),C(this,"coallesedSaving",!0),C(this,"coallesedSavingDelay",250),C(this,"messageHandler",void 0),C(this,"keyDownEventListener",void 0),C(this,"keyUpEventListener",void 0),C(this,"clickEventListener",void 0),C(this,"onThemesChangeCallback",void 0),!e||!e.targetWindow)throw new Error("contentWindow must be a valid Window object.");this.contentWindow=e.targetWindow,this.processParameters(e),this.registerMessageHandler(),this.registerKeyboardEventListeners(),this.registerMouseEventListeners()}processParameters(e){var t;const{initialPermissions:s,options:n,onReady:i,onThemesChange:o}=e;var a;s&&s.length>0&&(this.initialPermissions=s),u(null==n?void 0:n.coallesedSaving)&&(this.coallesedSaving=n.coallesedSaving),u(null==n?void 0:n.coallesedSavingDelay)&&(this.coallesedSavingDelay=n.coallesedSavingDelay),u(null==n?void 0:n.acceptsThemes)&&(this.component.acceptsThemes=null===(a=null==n?void 0:n.acceptsThemes)||void 0===a||a),u(i)&&(this.onReadyCallback=i),u(o)&&(this.onThemesChangeCallback=o),f.enabled=null!==(t=null==n?void 0:n.debug)&&void 0!==t&&t}deinit(){this.onReadyCallback=void 0,this.component={acceptsThemes:!0,activeThemes:[]},this.messageQueue=[],this.sentMessages=[],this.lastStreamedItem=void 0,this.pendingSaveItems=void 0,this.pendingSaveTimeout=void 0,this.pendingSaveParams=void 0,this.messageHandler&&(this.contentWindow.document.removeEventListener("message",this.messageHandler),this.contentWindow.removeEventListener("message",this.messageHandler)),this.keyDownEventListener&&this.contentWindow.removeEventListener("keydown",this.keyDownEventListener),this.keyUpEventListener&&this.contentWindow.removeEventListener("keyup",this.keyUpEventListener),this.clickEventListener&&this.contentWindow.removeEventListener("click",this.clickEventListener)}registerMessageHandler(){this.messageHandler=e=>{if(f.info("Components API Message received:",e.data),document.referrer&&new URL(document.referrer).origin!==new URL(e.origin).origin)return;const{data:t}=e,n=(e=>{if("string"!=typeof e)return!1;try{const t=JSON.parse(e),s=Object.prototype.toString.call(t);return"[object Object]"===s||"[object Array]"===s}catch(e){return!1}})(t)?JSON.parse(t):t;if(n){if(void 0===this.component.origin&&n.action===s.ComponentRegistered)this.component.origin=e.origin;else if(e.origin!==this.component.origin)return;this.handleMessage(n)}else f.error("Invalid data received. Skipping...")},this.contentWindow.document.addEventListener("message",this.messageHandler,!1),this.contentWindow.addEventListener("message",this.messageHandler,!1),f.info("Waiting for messages...")}registerKeyboardEventListeners(){this.keyDownEventListener=e=>{f.info("A key has been pressed: ".concat(e.key)),e.ctrlKey?this.keyDownEvent(I.Ctrl):e.shiftKey?this.keyDownEvent(I.Shift):(e.metaKey||"Meta"===e.key)&&this.keyDownEvent(I.Meta)},this.keyUpEventListener=e=>{f.info("A key has been released: ".concat(e.key)),"Control"===e.key?this.keyUpEvent(I.Ctrl):"Shift"===e.key?this.keyUpEvent(I.Shift):"Meta"===e.key&&this.keyUpEvent(I.Meta)},this.contentWindow.addEventListener("keydown",this.keyDownEventListener,!1),this.contentWindow.addEventListener("keyup",this.keyUpEventListener,!1)}registerMouseEventListeners(){this.clickEventListener=e=>{f.info("A click has been performed."),this.mouseClickEvent()},this.contentWindow.addEventListener("click",this.clickEventListener,!1)}handleMessage(e){switch(e.action){case s.ComponentRegistered:this.component.sessionKey=e.sessionKey,e.componentData&&(this.component.data=e.componentData),this.onReady(e.data),f.info("Component successfully registered with payload:",e);break;case s.ActivateThemes:this.activateThemes(e.data.themes);break;default:{var t,n;if(!e.original)return;const s=null===(t=this.sentMessages)||void 0===t?void 0:t.filter((t=>{var s;return t.messageId===(null===(s=e.original)||void 0===s?void 0:s.messageId)}))[0];if(!s){const e=this.contentWindow.document.title,t=("The extension \'".concat(e,"\' is attempting to communicate with Standard Notes, ")+"but an error is preventing it from doing so. Please restart this extension and try again.").replace("  "," ");return void f.info(t)}null==s||null===(n=s.callback)||void 0===n||n.call(s,e.data);break}}}onReady(e){this.component.environment=e.environment,this.component.platform=e.platform,this.component.uuid=e.uuid,this.initialPermissions&&this.initialPermissions.length>0&&this.requestPermissions(this.initialPermissions);for(const e of this.messageQueue)this.postMessage(e.action,e.data,e.callback);this.messageQueue=[],f.info("Data passed to onReady:",e),this.activateThemes(e.activeThemeUrls||[]),this.postMessage(s.ThemesActivated,{}),this.onReadyCallback&&this.onReadyCallback()}getSelfComponentUUID(){return this.component.uuid}isRunningInDesktopApplication(){return this.component.environment===v(n.Desktop)}isRunningInMobileApplication(){return this.component.environment===v(n.Mobile)}getComponentDataValueForKey(e){if(this.component.data)return this.component.data[e]}setComponentDataValueForKey(e,t){if(!this.component.data)throw new Error("The component has not been initialized.");if(!e||e&&0===e.length)throw new Error("The key for the data value should be a valid string.");this.component.data=E(E({},this.component.data),{},{[e]:t}),this.postMessage(s.SetComponentData,{componentData:this.component.data})}clearComponentData(){this.component.data={},this.postMessage(s.SetComponentData,{componentData:this.component.data})}postMessage(e,t,s){if(!this.component.sessionKey)return void this.messageQueue.push({action:e,data:t,api:b.Component,callback:s});const n={action:e,data:t,messageId:this.generateUUID(),sessionKey:this.component.sessionKey,api:b.Component},i=JSON.parse(JSON.stringify(n));let o;i.callback=s,this.sentMessages.push(i),o=this.isRunningInMobileApplication()?JSON.stringify(n):n,f.info("Posting message:",o),this.contentWindow.parent.postMessage(o,this.component.origin)}requestPermissions(e,t){this.postMessage(s.RequestPermissions,{permissions:e},(()=>{t&&t()}))}activateThemes(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(!this.component.acceptsThemes)return;f.info("Incoming themes:",e);const{activeThemes:t}=this.component;if(t&&t.sort().toString()==e.sort().toString())return;let s=e;const n=[];for(const i of t)e.includes(i)?s=s.filter((e=>e!==i)):n.push(i);f.info("Deactivating themes:",n),f.info("Activating themes:",s);for(const e of n)this.deactivateTheme(e);this.component.activeThemes=e;for(const e of s){if(!e)continue;const t=this.contentWindow.document.createElement("link");t.id=btoa(e),t.href=e,t.type="text/css",t.rel="stylesheet",t.media="screen,print",t.className="custom-theme",this.contentWindow.document.getElementsByTagName("head")[0].appendChild(t)}this.onThemesChangeCallback&&this.onThemesChangeCallback()}themeElementForUrl(e){return Array.from(this.contentWindow.document.getElementsByClassName("custom-theme")).slice().find((t=>t.id==btoa(e)))}deactivateTheme(e){const t=this.themeElementForUrl(e);t&&t.parentNode&&(t.setAttribute("disabled","true"),t.parentNode.removeChild(t))}generateUUID(){return p()}get platform(){return this.component.platform}get environment(){return this.component.environment}streamItems(e,t){this.postMessage(s.StreamItems,{content_types:e},(e=>{t(e.items)}))}streamContextItem(e){this.postMessage(s.StreamContextItem,{},(t=>{const{item:s}=t;(!this.lastStreamedItem||this.lastStreamedItem.uuid!==s.uuid)&&this.pendingSaveTimeout&&(clearTimeout(this.pendingSaveTimeout),this._performSavingOfItems(this.pendingSaveParams),this.pendingSaveTimeout=void 0,this.pendingSaveParams=void 0),this.lastStreamedItem=s,e(this.lastStreamedItem)}))}selectItem(e){this.postMessage(s.SelectItem,{item:this.jsonObjectForItem(e)})}clearSelection(){this.postMessage(s.ClearSelection,{content_type:i.Tag})}createItem(e,t){this.postMessage(s.CreateItem,{item:this.jsonObjectForItem(e)},(e=>{let{item:s}=e;!s&&e.items&&e.items.length>0&&(s=e.items[0]),this.associateItem(s),t&&t(s)}))}createItems(e,t){const n=e.map((e=>this.jsonObjectForItem(e)));this.postMessage(s.CreateItems,{items:n},(e=>{t&&t(e.items)}))}associateItem(e){this.postMessage(s.AssociateItem,{item:this.jsonObjectForItem(e)})}deassociateItem(e){this.postMessage(s.DeassociateItem,{item:this.jsonObjectForItem(e)})}deleteItem(e,t){this.deleteItems([e],t)}deleteItems(e,t){const n={items:e.map((e=>this.jsonObjectForItem(e)))};this.postMessage(s.DeleteItems,n,(e=>{t&&t(e)}))}sendCustomEvent(e,t,s){this.postMessage(e,t,(e=>{s&&s(e)}))}saveItem(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.saveItems([e],t,s)}saveItemWithPresave(e,t,s){this.saveItemsWithPresave([e],t,s)}saveItemsWithPresave(e,t,s){this.saveItems(e,s,!1,t)}_performSavingOfItems(e){let{items:t,presave:n,callback:i}=e;n&&n();const o=[];for(const e of t)o.push(this.jsonObjectForItem(e));this.postMessage(s.SaveItems,{items:o},(()=>{i&&i()}))}saveItems(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;if(this.pendingSaveItems||(this.pendingSaveItems=[]),this.coallesedSaving&&!s){this.pendingSaveTimeout&&clearTimeout(this.pendingSaveTimeout);const s=e.map((e=>e.uuid)),i=this.pendingSaveItems.filter((e=>!s.includes(e.uuid)));this.pendingSaveItems=i.concat(e),this.pendingSaveParams={items:this.pendingSaveItems,presave:n,callback:t},this.pendingSaveTimeout=setTimeout((()=>{this._performSavingOfItems(this.pendingSaveParams),this.pendingSaveItems=[],this.pendingSaveTimeout=void 0,this.pendingSaveParams=null}),this.coallesedSavingDelay)}else this._performSavingOfItems({items:e,presave:n,callback:t})}setSize(e,t){this.postMessage(s.SetSize,{type:"container",width:e,height:t})}keyDownEvent(e){this.postMessage(s.KeyDown,{keyboardModifier:e})}keyUpEvent(e){this.postMessage(s.KeyUp,{keyboardModifier:e})}mouseClickEvent(){this.postMessage(s.Click,{})}jsonObjectForItem(e){const t=Object.assign({},e);return t.children=null,t.parent=null,t}getItemAppDataValue(e,t){var s,n;return null==e||null===(s=e.content)||void 0===s||null===(n=s.appData)||void 0===n?void 0:n["org.standardnotes.sn"][t]}}return t.default})()}));\n//# sourceMappingURL=dist.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../component-relay/dist/dist.js\n')},"./src/editorKit.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ EditorKitBase)\n/* harmony export */ });\n/* harmony import */ var _standardnotes_component_relay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @standardnotes/component-relay */ "../component-relay/dist/dist.js");\n/* harmony import */ var _standardnotes_component_relay__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_standardnotes_component_relay__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fileLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fileLoader */ "./src/fileLoader.ts");\n/* harmony import */ var _textExpander__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./textExpander */ "./src/textExpander.ts");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./src/utils.ts");\n/* harmony import */ var _fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fileSafeHtml */ "./src/fileSafeHtml.ts");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar EditorKitMode;\n\n(function (EditorKitMode) {\n  EditorKitMode["PlainText"] = "plaintext";\n  EditorKitMode["Html"] = "html";\n  EditorKitMode["Markdown"] = "markdown";\n  EditorKitMode["Json"] = "json";\n})(EditorKitMode || (EditorKitMode = {}));\n\nclass EditorKitBase {\n  constructor(delegate, options) {\n    this.delegate = delegate;\n    this.options = options;\n\n    _defineProperty(this, "fileIdsPendingAssociation", []);\n\n    _defineProperty(this, "componentRelay", void 0);\n\n    _defineProperty(this, "fileLoader", void 0);\n\n    _defineProperty(this, "textExpander", void 0);\n\n    _defineProperty(this, "fileSafeLoading", void 0);\n\n    _defineProperty(this, "fileSafeClass", void 0);\n\n    _defineProperty(this, "fileSafeInstance", void 0);\n\n    _defineProperty(this, "note", void 0);\n\n    _defineProperty(this, "ignoreNextTextChange", void 0);\n\n    _defineProperty(this, "needsFileSafeElementLoad", void 0);\n\n    _defineProperty(this, "previousText", void 0);\n\n    this.connectToBridge();\n\n    if (this.options.supportsFileSafe) {\n      this.fileSafeLoading = this.importFileSafe();\n    }\n  }\n\n  connectToBridge() {\n    const {\n      coallesedSaving,\n      coallesedSavingDelay,\n      mode,\n      supportsFileSafe\n    } = this.options;\n    this.componentRelay = new (_standardnotes_component_relay__WEBPACK_IMPORTED_MODULE_0___default())({\n      targetWindow: window,\n      options: {\n        coallesedSaving,\n\n        /**\n         * The editor does some debouncing for us, so we\'ll lower the\n         * default debounce value from 250 to 150\n         */\n        coallesedSavingDelay\n      },\n      onReady: () => {\n        const {\n          platform\n        } = this.componentRelay;\n\n        if (platform) {\n          document.documentElement.classList.add(platform);\n        }\n      },\n      onThemesChange: this.delegate.onThemesChange\n    });\n    this.componentRelay.streamContextItem(async note => {\n      /**\n       * TODO: If note has changed, release previous temp object URLs.\n       */\n      let isNewNoteLoad = true;\n\n      if (this.note && this.note.uuid == note.uuid) {\n        isNewNoteLoad = false;\n      }\n\n      const previousNote = this.note;\n\n      if (supportsFileSafe) {\n        const itemClass = this.fileSafeClass.getSFItemClass();\n        this.note = new itemClass(note);\n        this.fileSafeInstance.setCurrentNote(this.note);\n      } else {\n        this.note = note;\n      } // Only update UI on non-metadata updates.\n\n\n      if (note.isMetadataUpdate) {\n        return;\n      }\n\n      let text = note.content.text;\n      /**\n       * If we\'re an HTML editor, and we\'re dealing with a new note,\n       * check to see if it\'s in html format.\n       * If it\'s not, we don\'t want to convert it to HTML until the user makes an explicit change\n       * so we\'ll ignore the next change event in this case.\n       */\n\n      if (mode === EditorKitMode.Html && isNewNoteLoad) {\n        const isHtml = /<[a-z][\\s\\S]*>/i.test(text);\n\n        if (!isHtml) {\n          this.ignoreNextTextChange = true;\n        }\n      }\n      /**\n       * Set before expanding. \n       * We want this value to always be the collapsed value\n       */\n\n\n      this.previousText = text;\n\n      if (supportsFileSafe) {\n        /**\n         * We want to expand any filesafe syntax in the text,\n         * but only after the text has been inserted.\n         * (Will be checked on editor change callback)\n         */\n        this.needsFileSafeElementLoad = true;\n        text = (0,_fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.expandedFileSafeSyntax)(text);\n      }\n\n      this.delegate.onNoteValueChange && (await this.delegate.onNoteValueChange(note));\n      this.delegate.setEditorRawText(text);\n\n      if (this.delegate.onNoteLockToggle) {\n        var _getItemAppDataValue, _getItemAppDataValue2;\n\n        const previousLockState = (_getItemAppDataValue = this.componentRelay.getItemAppDataValue(previousNote, \'locked\')) !== null && _getItemAppDataValue !== void 0 ? _getItemAppDataValue : false;\n        const newLockState = (_getItemAppDataValue2 = this.componentRelay.getItemAppDataValue(this.note, \'locked\')) !== null && _getItemAppDataValue2 !== void 0 ? _getItemAppDataValue2 : false;\n\n        if (previousLockState !== newLockState) {\n          this.delegate.onNoteLockToggle(newLockState);\n        }\n      }\n\n      if (isNewNoteLoad) {\n        this.delegate.clearUndoHistory();\n      }\n    });\n  }\n\n  async importFileSafe() {\n    return Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! filesafe-js */ "filesafe-js", 23)).then(result => {\n      this.fileSafeClass = result.default;\n      this.configureFileSafe();\n      return this.fileSafeInstance;\n    });\n  }\n\n  configureFileSafe() {\n    this.fileSafeInstance = new this.fileSafeClass({\n      componentManager: this.componentRelay\n    });\n    this.fileSafeInstance.addDataChangeObserver(() => {\n      // Reload UI by querying FileSafe for changes...\n      const allFileDescriptors = this.fileSafeInstance.getAllFileDescriptors();\n\n      if (this.note && this.fileIdsPendingAssociation.length > 0) {\n        let hasMatch = false;\n\n        for (const uuid of this.fileIdsPendingAssociation.slice()) {\n          const descriptor = allFileDescriptors.find(candidate => candidate.uuid == uuid);\n\n          if (!descriptor) {\n            continue;\n          }\n\n          hasMatch = true;\n          this.fileIdsPendingAssociation.splice(this.fileIdsPendingAssociation.indexOf(uuid), 1);\n          const syntax = (0,_fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.insertionSyntaxForFileDescriptor)(descriptor);\n          this.delegate.insertRawText(syntax);\n        }\n\n        if (hasMatch) {\n          this.textExpander.searchPatterns();\n        }\n      }\n\n      if (allFileDescriptors.length > 0) {\n        this.fileLoader.loadFileSafeElements();\n      }\n    });\n    this.fileSafeInstance.addNewFileDescriptorHandler(fileDescriptor => {\n      /**\n       * Called when a new file is uploaded. We\'ll wait until the bridge acknowledges\n       * receipt of this item, and then it will be added to the editor.\n       */\n      this.fileIdsPendingAssociation.push(fileDescriptor.uuid);\n    });\n    this.fileLoader = new _fileLoader__WEBPACK_IMPORTED_MODULE_1__.default({\n      fileSafeInstance: this.fileSafeInstance,\n      getElementsBySelector: this.delegate.getElementsBySelector,\n      insertElement: this.delegate.insertElement,\n      preprocessElement: this.delegate.preprocessElement\n    });\n    this.textExpander = new _textExpander__WEBPACK_IMPORTED_MODULE_2__.default({\n      afterExpand: () => this.fileLoader.loadFileSafeElements(),\n      getCurrentLineText: this.delegate.getCurrentLineText,\n      getPreviousLineText: this.delegate.getPreviousLineText,\n      replaceText: this.delegate.replaceText,\n      patterns: [{\n        regex: _fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.FileSafeSyntaxPattern,\n        callback: matchedText => {\n          return (0,_fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.expandedFileSafeSyntax)(matchedText);\n        }\n      }]\n    });\n  }\n  /**\n   * Gets the FileSafe class.\n   * @returns FileSafe class.\n   */\n\n\n  async getFileSafe() {\n    if (!this.fileSafeInstance && this.fileSafeLoading) {\n      return this.fileSafeLoading;\n    }\n\n    return this.importFileSafe();\n  }\n  /**\n   * Called by consumer when the editor has a keyup event.\n   */\n\n\n  onEditorKeyUp(_ref) {\n    let {\n      isSpace,\n      isEnter\n    } = _ref;\n    this.textExpander.onKeyUp({\n      isSpace,\n      isEnter\n    });\n  }\n  /**\n   * Called by consumer when user pastes into editor.\n   */\n\n\n  onEditorPaste() {\n    this.textExpander.onKeyUp({\n      isPaste: true\n    });\n  }\n  /**\n   * Called by consumer when the editor has a change/input event.\n   */\n\n\n  onEditorValueChanged(text) {\n    const {\n      mode,\n      supportsFileSafe\n    } = this.options;\n\n    if (this.needsFileSafeElementLoad) {\n      this.needsFileSafeElementLoad = false;\n      this.fileLoader.loadFileSafeElements();\n    }\n\n    if (this.ignoreNextTextChange) {\n      this.ignoreNextTextChange = false;\n      return;\n    }\n\n    if (supportsFileSafe) {\n      text = (0,_fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.collapseFileSafeSyntax)(text);\n      /**\n       * Change events may be triggered several times when expanding filesafe syntax.\n       * Ultimately, while the visual layer is changing a lot, the underlying text layer,\n       * after being collapsed, will not change. So we\'ll compare the previous html to new collapsed html before continuing.\n       */\n\n      const sameText = this.previousText == text;\n\n      if (sameText) {\n        return;\n      }\n    }\n\n    this.previousText = text;\n\n    if (!this.note) {\n      return;\n    }\n\n    const note = this.note;\n    this.componentRelay.saveItemWithPresave(note, () => {\n      note.content.text = text;\n\n      if (this.delegate.generateCustomPreview) {\n        var _result$plain;\n\n        const result = this.delegate.generateCustomPreview(text);\n        note.content.preview_plain = (_result$plain = result.plain) !== null && _result$plain !== void 0 ? _result$plain : \' \';\n        note.content.preview_html = result.html;\n      } else {\n        if (mode === EditorKitMode.Html) {\n          let preview = (0,_fileSafeHtml__WEBPACK_IMPORTED_MODULE_4__.removeFileSafeSyntaxFromHtml)(text);\n          preview = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.truncateString)((0,_utils__WEBPACK_IMPORTED_MODULE_3__.htmlToText)(preview));\n          /**\n           * If the preview has no length due to either being an empty note, or having just 1 FileSafe file\n           * that is stripped above, then we don\'t want to set to empty string, otherwise SN app will default to content\n           * for preview. We\'ll set a whitespace preview instead so SN doesn\'t go based on innate content.\n           */\n\n          note.content.preview_plain = preview.length > 0 ? preview : \' \';\n        } else {\n          note.content.preview_plain = text;\n        } // We\'re only using plain in this block.\n\n\n        note.content.preview_html = null;\n      }\n    });\n  }\n  /**\n   * Whether or not FileSafe is configured with integrations and keys, and can handle file uploads.\n   * If not, user should open files modal and configure FileSafe.\n   */\n\n\n  canUploadFiles() {\n    const credentials = this.fileSafeInstance.getAllCredentials();\n    const integrations = this.fileSafeInstance.getAllIntegrations();\n    return credentials.length > 0 && integrations.length > 0;\n  }\n  /**\n   * Encrypts and Uploads a Javascript file object to FileSafe.\n   * @param file The file to upload.\n   * @returns A file descriptor if successful.\n   */\n\n\n  async uploadJSFileObject(file) {\n    const cursorIdentifier = this.fileLoader.insertStatusAtCursor(\'Processing file...\');\n    return this.fileSafeInstance.encryptAndUploadJavaScriptFileObject(file).then(() => {\n      this.fileLoader.removeCursorStatus(cursorIdentifier);\n    });\n  }\n  /**\n   * saveItemWithPresave from the component relay.\n   */\n\n\n  saveItemWithPresave(note, presave) {\n    this.componentRelay.saveItemWithPresave(note, presave);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/editorKit.ts\n')},"./src/fileLoader.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileLoader)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass FileLoader {\n  /**\n   * When a file is decrypted and loaded into a temp url, we'll place the temp url in here so that subsequent decrypt attempts\n   * dont require further work. Mapped values have the shape of { url, fileType, fsName }\n   */\n  // The UUIDs of files currently loading, so that we don't start a new load for currently loading file.\n  // The UUID to current status element mapping\n  constructor(options) {\n    this.options = options;\n\n    _defineProperty(this, \"uuidToFileTempUrlAndTypeMapping\", {});\n\n    _defineProperty(this, \"currentlyLoadingIds\", []);\n\n    _defineProperty(this, \"statusElementMapping\", {});\n\n    _defineProperty(this, \"fileTypeToElementType\", {\n      'image/png': 'img',\n      'image/jpg': 'img',\n      'image/jpeg': 'img',\n      'image/gif': 'img',\n      'image/tiff': 'img',\n      'image/bmp': 'img',\n      'video/mp4': 'video',\n      'audio/mpeg': 'audio',\n      'audio/mp3': 'audio'\n    });\n  }\n\n  fileTypeForElementType(type) {\n    return this.fileTypeToElementType[type.toLowerCase()];\n  }\n  /**\n   * Scans the document for elements <fileSafe>. If found, begins loading file.\n   */\n\n\n  loadFileSafeElements() {\n    const elements = this.options.getElementsBySelector('*[fsplaceholder]');\n\n    for (const element of elements) {\n      this.loadFileSafeElement(element);\n    }\n  }\n\n  async loadFileSafeElement(fsElement) {\n    var _fsElement$getAttribu;\n\n    const {\n      fileSafeInstance\n    } = this.options;\n    const fsid = fsElement.getAttribute('fsid');\n    const fsName = (_fsElement$getAttribu = fsElement.getAttribute('fsName')) !== null && _fsElement$getAttribu !== void 0 ? _fsElement$getAttribu : '';\n    const fileNameDisplay = !fsName || fsName == 'undefined' ? 'file' : fsName;\n\n    if (!fsid) {\n      return false;\n    }\n\n    const existingMapping = this.uuidToFileTempUrlAndTypeMapping[fsid];\n\n    if (existingMapping) {\n      this.insertMediaElement({\n        fsid,\n        fsElement,\n        url: existingMapping.url,\n        fileType: existingMapping.fileType,\n        fsName: existingMapping.fsName\n      });\n      return false;\n    }\n\n    if (this.currentlyLoadingIds.includes(fsid)) {\n      return false;\n    }\n\n    const descriptor = fileSafeInstance.findFileDescriptor(fsid);\n\n    if (!descriptor) {\n      this.setStatus({\n        fsElement,\n        fsid,\n        status: \"Unable to find \".concat(fileNameDisplay, \" \").concat(fsid, \".\"),\n        removable: true\n      });\n      return false;\n    }\n\n    const selectorSyntax = \"[fsid=\\\"\".concat(descriptor.uuid, \"\\\"][fscollapsable]\");\n    const existingElements = document.querySelectorAll(\"img\".concat(selectorSyntax, \", figure\").concat(selectorSyntax, \", video\").concat(selectorSyntax, \", audio\").concat(selectorSyntax));\n\n    if (existingElements.length > 0) {\n      return false;\n    }\n\n    const cleanup = () => this.currentlyLoadingIds.splice(this.currentlyLoadingIds.indexOf(fsid), 1);\n\n    this.currentlyLoadingIds.push(fsid);\n    this.setStatus({\n      fsElement,\n      fsid,\n      status: \"Downloading \".concat(fileNameDisplay, \"...\")\n    }); // Allow UI to update before beginning download...\n\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.sleep)(0.05);\n    const fileItem = await fileSafeInstance.downloadFileFromDescriptor(descriptor).catch(() => {\n      this.setStatus({\n        fsElement,\n        fsid,\n        status: \"Unable to download \".concat(fileNameDisplay, \" \").concat(fsid, \".\")\n      });\n      return;\n    });\n\n    if (!fileItem) {\n      return false;\n    }\n\n    this.setStatus({\n      fsElement,\n      fsid,\n      status: \"Decrypting \".concat(fileNameDisplay, \"...\")\n    }); // Allow UI to update before beginning decryption\n\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.sleep)(0.05);\n    const data = await fileSafeInstance.decryptFile({\n      fileDescriptor: descriptor,\n      fileItem\n    }).catch(() => {\n      this.setStatus({\n        fsElement,\n        fsid,\n        status: \"Unable to decrypt \".concat(fileNameDisplay, \" \").concat(fsid, \".\")\n      });\n      return;\n    });\n\n    if (!data) {\n      return false;\n    } // Remove loading text\n\n\n    this.setStatus({\n      fsElement,\n      fsid\n    }); // Allow UI to update before adding image\n\n    await (0,_utils__WEBPACK_IMPORTED_MODULE_0__.sleep)(0.05); // Generate temporary url, must be released later\n\n    const fileType = descriptor.content.fileType;\n    const tempUrl = fileSafeInstance.createTemporaryFileUrl({\n      base64Data: data.decryptedData,\n      dataType: fileType\n    });\n    this.insertMediaElement({\n      fsid,\n      fileType,\n      fsName,\n      fsElement,\n      url: tempUrl\n    });\n    cleanup();\n    this.uuidToFileTempUrlAndTypeMapping[fsid] = {\n      fileType,\n      url: tempUrl,\n      fsName\n    };\n    return true;\n  }\n\n  insertMediaElement(_ref) {\n    let {\n      url,\n      fsid,\n      fsName,\n      fileType,\n      fsElement\n    } = _ref;\n    const elementType = this.fileTypeForElementType(fileType);\n    let mediaElement;\n\n    switch (elementType) {\n      case 'img':\n        mediaElement = this.createImageElement({\n          url,\n          fsid,\n          fsName,\n          fsElement\n        });\n        break;\n\n      case 'video':\n        mediaElement = this.createVideoElement({\n          url,\n          fsid,\n          fileType,\n          fsName,\n          fsElement\n        });\n        break;\n\n      case 'audio':\n        mediaElement = this.createAudioElement({\n          url,\n          fsid,\n          fsName\n        });\n        break;\n\n      default:\n        mediaElement = this.createDownloadElement({\n          url,\n          fsid,\n          fsName\n        });\n        break;\n    }\n\n    this.insertElementNearElement(mediaElement, fsElement); // Remove fsElement now that image is loaded.\n\n    fsElement.remove();\n  }\n\n  wrapElementInTag(_ref2) {\n    let {\n      element,\n      tagName,\n      fsid,\n      fsName\n    } = _ref2;\n    const tag = document.createElement(tagName);\n    tag.setAttribute('fsid', fsid);\n    tag.setAttribute('fsName', fsName);\n    tag.setAttribute('fscollapsable', 'true');\n    tag.setAttribute('contenteditable', 'true');\n    tag.append(element);\n    return tag;\n  }\n\n  createImageElement(_ref3) {\n    let {\n      url,\n      fsid,\n      fsName,\n      fsElement\n    } = _ref3;\n    const image = document.createElement('img');\n    image.setAttribute('src', url);\n    image.setAttribute('srcset', \"\".concat(url, \" 2x\"));\n    image.setAttribute('fsid', fsid);\n    image.setAttribute('fsName', fsName);\n    image.setAttribute('fscollapsable', 'true');\n    const elementWidth = fsElement.getAttribute('width');\n\n    if (elementWidth) {\n      image.setAttribute('width', elementWidth);\n    }\n\n    const elementHeight = fsElement.getAttribute('height');\n\n    if (elementHeight) {\n      image.setAttribute('height', elementHeight);\n    }\n\n    return image;\n  }\n\n  createVideoElement(_ref4) {\n    let {\n      url,\n      fsid,\n      fileType,\n      fsName,\n      fsElement\n    } = _ref4;\n    const video = document.createElement('video');\n    video.setAttribute('controls', 'true');\n    video.setAttribute('fsid', fsid);\n    video.setAttribute('fsName', fsName);\n    video.setAttribute('fscollapsable', 'true');\n    const elementWidth = fsElement.getAttribute('width');\n\n    if (elementWidth) {\n      video.setAttribute('width', elementWidth);\n    }\n\n    const elementHeight = fsElement.getAttribute('height');\n\n    if (elementHeight) {\n      video.setAttribute('height', elementHeight);\n    }\n\n    const source = document.createElement('source');\n    source.setAttribute('src', url);\n    source.setAttribute('type', fileType);\n    video.append(source);\n    /**\n     * Redactor will automatically insert a video element in a p tag,\n     * so we'll do it ourselves so that we can control its attributes.\n     */\n\n    return this.wrapElementInTag({\n      fsid,\n      fsName,\n      element: video,\n      tagName: 'p'\n    });\n  }\n\n  createDownloadElement(_ref5) {\n    let {\n      url,\n      fsid,\n      fsName\n    } = _ref5;\n    const link = document.createElement('a');\n    link.setAttribute('fsid', fsid);\n    link.setAttribute('fsName', fsName);\n    link.setAttribute('ghost', 'true');\n    link.setAttribute('fscollapsable', 'true');\n    link.setAttribute('href', url);\n    link.textContent = \"\".concat(fsName);\n    return link;\n  }\n\n  createAudioElement(_ref6) {\n    let {\n      url,\n      fsid,\n      fsName\n    } = _ref6;\n    const audio = document.createElement('audio');\n    audio.setAttribute('src', url);\n    audio.setAttribute('controls', 'true');\n    audio.setAttribute('fsid', fsid);\n    audio.setAttribute('fsName', fsName);\n    audio.setAttribute('fscollapsable', 'true');\n    return this.wrapElementInTag({\n      fsid,\n      fsName,\n      element: audio,\n      tagName: 'p'\n    });\n  }\n\n  setStatus(_ref7) {\n    let {\n      status,\n      fsElement,\n      fsid,\n      removable = false\n    } = _ref7;\n\n    if (fsid) {\n      const existingStatusElement = this.statusElementMapping[fsid];\n\n      if (existingStatusElement) {\n        existingStatusElement.remove();\n        delete this.statusElementMapping[fsid];\n      }\n    }\n\n    if (status) {\n      let element = document.createElement('label');\n      element.setAttribute('id', fsid);\n      element.setAttribute('ghost', 'true');\n      element.setAttribute('contenteditable', 'false');\n      element.style.fontWeight = 'bold';\n      element.textContent = status;\n\n      if (removable) {\n        element.style.userSelect = 'all';\n      }\n\n      element = this.insertElementNearElement(element, fsElement);\n\n      if (fsid) {\n        this.statusElementMapping[fsid] = element;\n      }\n\n      return element;\n    }\n  }\n\n  insertStatusAtCursor(status) {\n    const identifier = Math.random().toString(36).substring(7);\n    this.setStatus({\n      status,\n      fsid: identifier,\n      fsElement: null\n    });\n    return identifier;\n  }\n\n  removeCursorStatus(identifier) {\n    /**\n     * We want to search for the element based on identifier, because the actual element\n     * inserted may have been done so as raw HTML, and not via an element pointer.\n     */\n    const elements = this.options.getElementsBySelector(\"#\".concat(identifier));\n\n    if (elements.length > 0) {\n      elements[0].remove();\n    }\n  }\n\n  insertElementNearElement(domNodeToInsert, inVicinityOfElement) {\n    const processedElement = this.options.preprocessElement(domNodeToInsert);\n    let insertionType = 'child'; // <figure> tags cannot be nested inside p tags.\n\n    if (inVicinityOfElement && processedElement.tagName.toLowerCase() == 'figure') {\n      // If we have a p ancestor, we need to get out.\n      const paragraphAncestor = inVicinityOfElement.closest('p');\n\n      if (paragraphAncestor) {\n        /**\n         * p tags cannot be nested in other p tags, so if we found one, we know its parent isn't and doesn't belong to a p tag.\n         * Add the new one right after paragraphAncestor.\n         */\n        inVicinityOfElement = paragraphAncestor;\n        insertionType = 'afterend';\n      }\n    }\n\n    this.options.insertElement(processedElement, inVicinityOfElement, insertionType);\n    return processedElement;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/fileLoader.ts\n")},"./src/fileSafeHtml.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FileSafeSyntaxPattern\": () => (/* binding */ FileSafeSyntaxPattern),\n/* harmony export */   \"expandedFileSafeSyntax\": () => (/* binding */ expandedFileSafeSyntax),\n/* harmony export */   \"removeFileSafeSyntaxFromHtml\": () => (/* binding */ removeFileSafeSyntaxFromHtml),\n/* harmony export */   \"insertionSyntaxForFileDescriptor\": () => (/* binding */ insertionSyntaxForFileDescriptor),\n/* harmony export */   \"collapseFileSafeSyntax\": () => (/* binding */ collapseFileSafeSyntax)\n/* harmony export */ });\n/* unused harmony export fileSafeSyntaxToHtmlElement */\n/**\n * Remove matching <p> tags if present.\n * Also capable of matching adjacent [fsSyntax][fsSyntax]\n */\nconst FileSafeSyntaxPattern = /(<p>)?\\[FileSafe[^\\]]*\\](<\\/p>)?/g;\n/**\n * Given an HTML string that includes substrings matching `FileSafeSyntaxPattern`,\n * replace occurences with ghost div element <fileSafe uuid='123'>\n */\n\nconst expandedFileSafeSyntax = html => {\n  return html.replace(FileSafeSyntaxPattern, match => {\n    return fileSafeSyntaxToHtmlElement(match);\n  });\n};\nconst removeFileSafeSyntaxFromHtml = html => {\n  return html.replace(FileSafeSyntaxPattern, _match => {\n    return '';\n  });\n};\nconst insertionSyntaxForFileDescriptor = descriptor => {\n  return \"[FileSafe:\".concat(descriptor.uuid, \":\").concat(descriptor.content.fileName, \"]\");\n};\nconst fileSafeSyntaxToHtmlElement = syntax => {\n  // Remove paragraph tags\n  syntax = syntax.replace('<p>', '');\n  syntax = syntax.replace('</p>', ''); // Remove brackets\n\n  syntax = syntax.replace('[', '').replace(']', '');\n  const components = syntax.split(':');\n  const uuid = components[1];\n  const name = components[2];\n  const size = components[3];\n  let sizeString = '';\n\n  if (size) {\n    const dimensions = size.split('x');\n    sizeString = \"width=\".concat(dimensions[0], \" height=\").concat(dimensions[1]);\n  }\n  /**\n   * We use a p tag here because if we try something custom, like `fileSafe` tag, the editor will automatically\n   * wrap it in a p tag, causing littered p tags remaining in the plaintext representation.\n   */\n\n\n  return \"<p fsplaceholder=true style='display: none;' fscollapsable=true ghost=true fsid='\".concat(uuid, \"' fsname='\").concat(name, \"' \").concat(sizeString, \"></p>\");\n};\n/**\n * Given a rendered HTML string, replace all <fileSafe> items with [FileSafe:UUID] plaintext items.\n * Also, for any elements that have the 'ghost' attribute, remove it from the resulting string.\n */\n\nconst collapseFileSafeSyntax = html => {\n  const domCopy = new DOMParser().parseFromString(html, 'text/html'); // Elements that have fscollapsable means they should be collapsed to plain syntax.\n\n  const mediaElements = domCopy.querySelectorAll('*[fscollapsable]');\n\n  for (const file of mediaElements) {\n    const uuid = file.getAttribute('fsid');\n    const name = file.getAttribute('fsname');\n    const width = file.getAttribute('width');\n    const height = file.getAttribute('height');\n    const components = ['FileSafe', uuid, name];\n\n    if (width && height) {\n      const size = \"\".concat(width, \"x\").concat(height);\n      components.push(size);\n    }\n\n    const fsSyntax = \"<p>[\".concat(components.join(':'), \"]</p>\");\n    file.insertAdjacentHTML('afterend', fsSyntax);\n    file.remove();\n  } // Remove any remaining ghost elements.\n\n\n  const ghosts = domCopy.querySelectorAll('*[ghost]');\n  ghosts.forEach(ghost => ghost.remove());\n  return domCopy.body.innerHTML;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmlsZVNhZmVIdG1sLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRWRpdG9yS2l0Ly4vc3JjL2ZpbGVTYWZlSHRtbC50cz8zNGY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIEZpbGVTYWZlRmlsZU1ldGFkYXRhID0ge1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbi8qKlxuICogUmVtb3ZlIG1hdGNoaW5nIDxwPiB0YWdzIGlmIHByZXNlbnQuXG4gKiBBbHNvIGNhcGFibGUgb2YgbWF0Y2hpbmcgYWRqYWNlbnQgW2ZzU3ludGF4XVtmc1N5bnRheF1cbiAqL1xuZXhwb3J0IGNvbnN0IEZpbGVTYWZlU3ludGF4UGF0dGVybiA9IC8oPHA+KT9cXFtGaWxlU2FmZVteXFxdXSpcXF0oPFxcL3A+KT8vZ1xuXG4vKipcbiAqIEdpdmVuIGFuIEhUTUwgc3RyaW5nIHRoYXQgaW5jbHVkZXMgc3Vic3RyaW5ncyBtYXRjaGluZyBgRmlsZVNhZmVTeW50YXhQYXR0ZXJuYCxcbiAqIHJlcGxhY2Ugb2NjdXJlbmNlcyB3aXRoIGdob3N0IGRpdiBlbGVtZW50IDxmaWxlU2FmZSB1dWlkPScxMjMnPlxuICovXG5leHBvcnQgY29uc3QgZXhwYW5kZWRGaWxlU2FmZVN5bnRheCA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gaHRtbC5yZXBsYWNlKEZpbGVTYWZlU3ludGF4UGF0dGVybiwgKG1hdGNoKSA9PiB7XG4gICAgcmV0dXJuIGZpbGVTYWZlU3ludGF4VG9IdG1sRWxlbWVudChtYXRjaClcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IHJlbW92ZUZpbGVTYWZlU3ludGF4RnJvbUh0bWwgPSAoaHRtbDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGh0bWwucmVwbGFjZShGaWxlU2FmZVN5bnRheFBhdHRlcm4sIChfbWF0Y2gpID0+IHtcbiAgICByZXR1cm4gJydcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IGluc2VydGlvblN5bnRheEZvckZpbGVEZXNjcmlwdG9yID0gKGRlc2NyaXB0b3I6IEZpbGVTYWZlRmlsZU1ldGFkYXRhKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGBbRmlsZVNhZmU6JHtkZXNjcmlwdG9yLnV1aWR9OiR7ZGVzY3JpcHRvci5jb250ZW50LmZpbGVOYW1lfV1gXG59XG5cbmV4cG9ydCBjb25zdCBmaWxlU2FmZVN5bnRheFRvSHRtbEVsZW1lbnQgPSAoc3ludGF4OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAvLyBSZW1vdmUgcGFyYWdyYXBoIHRhZ3NcbiAgc3ludGF4ID0gc3ludGF4LnJlcGxhY2UoJzxwPicsICcnKVxuICBzeW50YXggPSBzeW50YXgucmVwbGFjZSgnPC9wPicsICcnKVxuXG4gIC8vIFJlbW92ZSBicmFja2V0c1xuICBzeW50YXggPSBzeW50YXgucmVwbGFjZSgnWycsICcnKS5yZXBsYWNlKCddJywgJycpXG5cbiAgY29uc3QgY29tcG9uZW50cyA9IHN5bnRheC5zcGxpdCgnOicpXG4gIGNvbnN0IHV1aWQgPSBjb21wb25lbnRzWzFdXG4gIGNvbnN0IG5hbWUgPSBjb21wb25lbnRzWzJdXG4gIGNvbnN0IHNpemUgPSBjb21wb25lbnRzWzNdXG5cbiAgbGV0IHNpemVTdHJpbmcgPSAnJ1xuXG4gIGlmIChzaXplKSB7XG4gICAgY29uc3QgZGltZW5zaW9ucyA9IHNpemUuc3BsaXQoJ3gnKVxuICAgIHNpemVTdHJpbmcgPSBgd2lkdGg9JHtkaW1lbnNpb25zWzBdfSBoZWlnaHQ9JHtkaW1lbnNpb25zWzFdfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBXZSB1c2UgYSBwIHRhZyBoZXJlIGJlY2F1c2UgaWYgd2UgdHJ5IHNvbWV0aGluZyBjdXN0b20sIGxpa2UgYGZpbGVTYWZlYCB0YWcsIHRoZSBlZGl0b3Igd2lsbCBhdXRvbWF0aWNhbGx5XG4gICAqIHdyYXAgaXQgaW4gYSBwIHRhZywgY2F1c2luZyBsaXR0ZXJlZCBwIHRhZ3MgcmVtYWluaW5nIGluIHRoZSBwbGFpbnRleHQgcmVwcmVzZW50YXRpb24uXG4gICAqL1xuICByZXR1cm4gYDxwIGZzcGxhY2Vob2xkZXI9dHJ1ZSBzdHlsZT0nZGlzcGxheTogbm9uZTsnIGZzY29sbGFwc2FibGU9dHJ1ZSBnaG9zdD10cnVlIGZzaWQ9JyR7dXVpZH0nIGZzbmFtZT0nJHtuYW1lfScgJHtzaXplU3RyaW5nfT48L3A+YFxufVxuXG4vKipcbiAqIEdpdmVuIGEgcmVuZGVyZWQgSFRNTCBzdHJpbmcsIHJlcGxhY2UgYWxsIDxmaWxlU2FmZT4gaXRlbXMgd2l0aCBbRmlsZVNhZmU6VVVJRF0gcGxhaW50ZXh0IGl0ZW1zLlxuICogQWxzbywgZm9yIGFueSBlbGVtZW50cyB0aGF0IGhhdmUgdGhlICdnaG9zdCcgYXR0cmlidXRlLCByZW1vdmUgaXQgZnJvbSB0aGUgcmVzdWx0aW5nIHN0cmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbGxhcHNlRmlsZVNhZmVTeW50YXggPSAoaHRtbDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgY29uc3QgZG9tQ29weSA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoaHRtbCwgJ3RleHQvaHRtbCcpXG5cbiAgLy8gRWxlbWVudHMgdGhhdCBoYXZlIGZzY29sbGFwc2FibGUgbWVhbnMgdGhleSBzaG91bGQgYmUgY29sbGFwc2VkIHRvIHBsYWluIHN5bnRheC5cbiAgY29uc3QgbWVkaWFFbGVtZW50cyA9IGRvbUNvcHkucXVlcnlTZWxlY3RvckFsbCgnKltmc2NvbGxhcHNhYmxlXScpXG5cbiAgZm9yIChjb25zdCBmaWxlIG9mIG1lZGlhRWxlbWVudHMpIHtcbiAgICBjb25zdCB1dWlkID0gZmlsZS5nZXRBdHRyaWJ1dGUoJ2ZzaWQnKVxuICAgIGNvbnN0IG5hbWUgPSBmaWxlLmdldEF0dHJpYnV0ZSgnZnNuYW1lJylcbiAgICBjb25zdCB3aWR0aCA9IGZpbGUuZ2V0QXR0cmlidXRlKCd3aWR0aCcpXG4gICAgY29uc3QgaGVpZ2h0ID0gZmlsZS5nZXRBdHRyaWJ1dGUoJ2hlaWdodCcpXG5cbiAgICBjb25zdCBjb21wb25lbnRzID0gWydGaWxlU2FmZScsIHV1aWQsIG5hbWVdXG5cbiAgICBpZiAod2lkdGggJiYgaGVpZ2h0KSB7XG4gICAgICBjb25zdCBzaXplID0gYCR7d2lkdGh9eCR7aGVpZ2h0fWBcbiAgICAgIGNvbXBvbmVudHMucHVzaChzaXplKVxuICAgIH1cblxuICAgIGNvbnN0IGZzU3ludGF4ID0gYDxwPlske2NvbXBvbmVudHMuam9pbignOicpfV08L3A+YFxuICAgIGZpbGUuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmVuZCcsIGZzU3ludGF4KVxuICAgIGZpbGUucmVtb3ZlKClcbiAgfVxuXG4gIC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIGdob3N0IGVsZW1lbnRzLlxuICBjb25zdCBnaG9zdHMgPSBkb21Db3B5LnF1ZXJ5U2VsZWN0b3JBbGwoJypbZ2hvc3RdJylcbiAgZ2hvc3RzLmZvckVhY2goKGdob3N0KSA9PiBnaG9zdC5yZW1vdmUoKSlcblxuICByZXR1cm4gZG9tQ29weS5ib2R5LmlubmVySFRNTFxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/fileSafeHtml.ts\n")},"./src/textExpander.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ TextExpander)\n/* harmony export */ });\nclass TextExpander {\n  constructor(options) {\n    this.options = options;\n  }\n\n  onKeyUp(_ref) {\n    let {\n      isEnter,\n      isPaste,\n      isSpace\n    } = _ref;\n\n    if (isEnter || isPaste || isSpace) {\n      this.searchPatterns({\n        searchPreviousLine: isEnter !== null && isEnter !== void 0 ? isEnter : false\n      });\n    }\n  }\n\n  searchPatterns() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      searchPreviousLine: false\n    };\n    const text = params.searchPreviousLine ? this.options.getPreviousLineText() : this.options.getCurrentLineText();\n\n    for (const pattern of this.options.patterns) {\n      const match = pattern.regex.exec(text);\n      if (!match) continue;\n      const matchedText = match[0];\n\n      if (matchedText) {\n        const replaceWith = pattern.callback(matchedText);\n        this.replaceSelection(pattern.regex, replaceWith, params.searchPreviousLine);\n      }\n    }\n  }\n\n  replaceSelection(regex, replacement, searchPreviousLine) {\n    var _this$options, _this$options2;\n\n    if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.beforeExpand) {\n      this.options.beforeExpand();\n    }\n\n    this.options.replaceText({\n      regex,\n      replacement,\n      searchPreviousLine\n    });\n\n    if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.afterExpand) {\n      var _this$options3;\n\n      (_this$options3 = this.options) === null || _this$options3 === void 0 ? void 0 : _this$options3.afterExpand();\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGV4dEV4cGFuZGVyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRWRpdG9yS2l0Ly4vc3JjL3RleHRFeHBhbmRlci50cz80NTNhIl0sInNvdXJjZXNDb250ZW50IjpbInR5cGUgUGF0dGVybiA9IHtcbiAgcmVnZXg6IFJlZ0V4cFxuICBjYWxsYmFjazogKG1hdGNoZWRUZXh0OiBzdHJpbmcpID0+IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBUZXh0RXhwYW5kZXJPcHRpb25zID0ge1xuICBwYXR0ZXJuczogUGF0dGVybltdXG4gIGJlZm9yZUV4cGFuZD86ICgpID0+IHZvaWRcbiAgYWZ0ZXJFeHBhbmQ/OiAoKSA9PiB2b2lkXG4gIGdldEN1cnJlbnRMaW5lVGV4dDogKCkgPT4gc3RyaW5nXG4gIGdldFByZXZpb3VzTGluZVRleHQ6ICgpID0+IHN0cmluZ1xuICByZXBsYWNlVGV4dDogKHsgcmVnZXg6IFJlZ0V4cCwgcmVwbGFjZW1lbnQ6IHN0cmluZywgc2VhcmNoUHJldmlvdXNMaW5lOiBib29sZWFuIH0pID0+IHN0cmluZ1xufVxuXG50eXBlIE9uS2V5VXBQYXJhbXMgPSB7XG4gIGlzRW50ZXI/OiBib29sZWFuXG4gIGlzUGFzdGU/OiBib29sZWFuXG4gIGlzU3BhY2U/OiBib29sZWFuXG59XG5cbnR5cGUgU2VhcmNoUGF0dGVybnNQYXJhbXMgPSB7XG4gIHNlYXJjaFByZXZpb3VzTGluZTogYm9vbGVhblxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXh0RXhwYW5kZXIge1xuICBjb25zdHJ1Y3RvciAocHJpdmF0ZSBvcHRpb25zOiBUZXh0RXhwYW5kZXJPcHRpb25zKSB7IH1cblxuICBwdWJsaWMgb25LZXlVcCAoeyBpc0VudGVyLCBpc1Bhc3RlLCBpc1NwYWNlIH06IE9uS2V5VXBQYXJhbXMpOiB2b2lkIHtcbiAgICBpZiAoaXNFbnRlciB8fCBpc1Bhc3RlIHx8IGlzU3BhY2UpIHtcbiAgICAgIHRoaXMuc2VhcmNoUGF0dGVybnMoe1xuICAgICAgICBzZWFyY2hQcmV2aW91c0xpbmU6IGlzRW50ZXIgPz8gZmFsc2VcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcHVibGljIHNlYXJjaFBhdHRlcm5zIChwYXJhbXM6IFNlYXJjaFBhdHRlcm5zUGFyYW1zID0geyBzZWFyY2hQcmV2aW91c0xpbmU6IGZhbHNlIH0pOiB2b2lkIHtcbiAgICBjb25zdCB0ZXh0ID0gKHBhcmFtcy5zZWFyY2hQcmV2aW91c0xpbmUpID9cbiAgICAgIHRoaXMub3B0aW9ucy5nZXRQcmV2aW91c0xpbmVUZXh0KCkgOiB0aGlzLm9wdGlvbnMuZ2V0Q3VycmVudExpbmVUZXh0KClcblxuICAgIGZvciAoY29uc3QgcGF0dGVybiBvZiB0aGlzLm9wdGlvbnMucGF0dGVybnMpIHtcbiAgICAgIGNvbnN0IG1hdGNoID0gcGF0dGVybi5yZWdleC5leGVjKHRleHQpXG4gICAgICBpZiAoIW1hdGNoKSBjb250aW51ZVxuXG4gICAgICBjb25zdCBtYXRjaGVkVGV4dCA9IG1hdGNoWzBdXG5cbiAgICAgIGlmIChtYXRjaGVkVGV4dCkge1xuICAgICAgICBjb25zdCByZXBsYWNlV2l0aCA9IHBhdHRlcm4uY2FsbGJhY2sobWF0Y2hlZFRleHQpXG4gICAgICAgIHRoaXMucmVwbGFjZVNlbGVjdGlvbihwYXR0ZXJuLnJlZ2V4LCByZXBsYWNlV2l0aCwgcGFyYW1zLnNlYXJjaFByZXZpb3VzTGluZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHJlcGxhY2VTZWxlY3Rpb24gKHJlZ2V4OiBSZWdFeHAsIHJlcGxhY2VtZW50OiBzdHJpbmcsIHNlYXJjaFByZXZpb3VzTGluZTogYm9vbGVhbik6IHZvaWQge1xuICAgIGlmICh0aGlzLm9wdGlvbnM/LmJlZm9yZUV4cGFuZCkge1xuICAgICAgdGhpcy5vcHRpb25zLmJlZm9yZUV4cGFuZCgpXG4gICAgfVxuXG4gICAgdGhpcy5vcHRpb25zLnJlcGxhY2VUZXh0KHtcbiAgICAgIHJlZ2V4LFxuICAgICAgcmVwbGFjZW1lbnQsXG4gICAgICBzZWFyY2hQcmV2aW91c0xpbmVcbiAgICB9KVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucz8uYWZ0ZXJFeHBhbmQpIHtcbiAgICAgIHRoaXMub3B0aW9ucz8uYWZ0ZXJFeHBhbmQoKVxuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7QUF3QkE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFDQTtBQUtBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBM0NBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/textExpander.ts\n')},"./src/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "htmlToText": () => (/* binding */ htmlToText),\n/* harmony export */   "truncateString": () => (/* binding */ truncateString),\n/* harmony export */   "sleep": () => (/* binding */ sleep)\n/* harmony export */ });\nconst htmlToText = html => {\n  const tmpDocument = document.implementation.createHTMLDocument().body;\n  tmpDocument.innerHTML = html;\n  return tmpDocument.textContent || tmpDocument.innerText || \'\';\n};\nconst truncateString = function truncateString(text) {\n  let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 90;\n\n  if (text.length <= limit) {\n    return text;\n  }\n\n  return text.substring(0, limit) + \'...\';\n};\nconst sleep = async seconds => {\n  await new Promise(resolve => setTimeout(resolve, seconds * 1000));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FZGl0b3JLaXQvLi9zcmMvdXRpbHMudHM/N2RkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaHRtbFRvVGV4dCA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB0bXBEb2N1bWVudCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgpLmJvZHlcbiAgdG1wRG9jdW1lbnQuaW5uZXJIVE1MID0gaHRtbFxuICByZXR1cm4gdG1wRG9jdW1lbnQudGV4dENvbnRlbnQgfHwgdG1wRG9jdW1lbnQuaW5uZXJUZXh0IHx8ICcnXG59XG5cbmV4cG9ydCBjb25zdCB0cnVuY2F0ZVN0cmluZyA9ICh0ZXh0OiBzdHJpbmcsIGxpbWl0ID0gOTApOiBzdHJpbmcgPT4ge1xuICBpZiAodGV4dC5sZW5ndGggPD0gbGltaXQpIHtcbiAgICByZXR1cm4gdGV4dFxuICB9XG4gIHJldHVybiB0ZXh0LnN1YnN0cmluZygwLCBsaW1pdCkgKyAnLi4uJ1xufVxuXG5leHBvcnQgY29uc3Qgc2xlZXAgPSBhc3luYyAoc2Vjb25kczogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBzZWNvbmRzICogMTAwMCkpXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils.ts\n')},"filesafe-js":e=>{"use strict";e.exports=__WEBPACK_EXTERNAL_MODULE_filesafe_js__}},__webpack_module_cache__={},leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);__webpack_require__.r(n);var l={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var c=2&t&&e;"object"==typeof c&&!~leafPrototypes.indexOf(c);c=getProto(c))Object.getOwnPropertyNames(c).forEach((t=>l[t]=()=>e[t]));return l.default=()=>e,__webpack_require__.d(n,l),n},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/editorKit.ts");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()}));